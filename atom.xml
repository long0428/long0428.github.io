<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>To see a world in a flower</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://long0428.cc/"/>
  <updated>2016-12-01T02:57:25.655Z</updated>
  <id>http://long0428.cc/</id>
  
  <author>
    <name>Moss Zhang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jenkins Undeploy Failed Error</title>
    <link href="http://long0428.cc/2016/12/01/jenkins%20Undeploy%20Failed%20Error/"/>
    <id>http://long0428.cc/2016/12/01/jenkins Undeploy Failed Error/</id>
    <published>2016-12-01T02:57:25.627Z</published>
    <updated>2016-12-01T02:57:25.655Z</updated>
    
    <content type="html"><![CDATA[<p>发现jenkins构建的时间无法删除自己发布的旧工程，导致构建失败。日志报 Failed to undeploy错误。</p>
<p>google了下，从2方面去解决。</p>
<p>第一个是看给的权限有没有缺少<br>第二个修改context.xml</p>
<h3 id="第一步、增加tomcat权限"><a href="#第一步、增加tomcat权限" class="headerlink" title="第一步、增加tomcat权限"></a>第一步、增加tomcat权限</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;user name=<span class="string">"admin"</span> password=<span class="string">"admin"</span> roles=<span class="string">"admin-gui,manager,manager-script,manager-jmx,manager-gui,manager-status"</span> /&gt;</div></pre></td></tr></table></figure>
<h3 id="第二步、修改context-xml-增加一句话"><a href="#第二步、修改context-xml-增加一句话" class="headerlink" title="第二步、修改context.xml 增加一句话"></a>第二步、修改context.xml 增加一句话</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;Context antiResourceLocking=<span class="string">"true"</span>&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;发现jenkins构建的时间无法删除自己发布的旧工程，导致构建失败。日志报 Failed to undeploy错误。&lt;/p&gt;
&lt;p&gt;google了下，从2方面去解决。&lt;/p&gt;
&lt;p&gt;第一个是看给的权限有没有缺少&lt;br&gt;第二个修改context.xml&lt;/p&gt;
&lt;h3 id
    
    </summary>
    
    
      <category term="jenkins" scheme="http://long0428.cc/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>spring boot 增加拦截器</title>
    <link href="http://long0428.cc/2016/11/30/spring%20boot%E5%A2%9E%E5%8A%A0%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>http://long0428.cc/2016/11/30/spring boot增加拦截器/</id>
    <published>2016-11-30T09:38:58.679Z</published>
    <updated>2016-11-30T09:38:58.706Z</updated>
    
    <content type="html"><![CDATA[<p>刚开始使用spring boot还是挺痛苦的，没有了各种XML反而不适应。。。这里给出如何注解添加一个拦截器</p>
<h3 id="第一步、继承WebMvcConfigurerAdapter"><a href="#第一步、继承WebMvcConfigurerAdapter" class="headerlink" title="第一步、继承WebMvcConfigurerAdapter"></a>第一步、继承WebMvcConfigurerAdapter</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.kindo.config;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</div><div class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</div><div class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</div><div class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.kindo.Interceptor.AuthorizationInterceptor;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@author</span> 张喻龙</div><div class="line"> * <span class="doctag">@since</span> 2015-12-19 16:16</div><div class="line"> */</div><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 指定一个路径，生成静态文件</div><div class="line">	 */</div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</div><div class="line">		registry.addResourceHandler(<span class="string">"/static/**"</span>).addResourceLocations(<span class="string">"classpath:/static/"</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 增加一个拦截器</div><div class="line">	 * </div><div class="line">	 * </div><div class="line">	 * addPathPatterns 用于添加拦截规则 excludePathPatterns 用户排除拦截</div><div class="line">	 */</div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</div><div class="line">		registry.addInterceptor(<span class="keyword">new</span> AuthorizationInterceptor()).addPathPatterns(<span class="string">"/**/api/**"</span>);</div><div class="line">		<span class="keyword">super</span>.addInterceptors(registry);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="第二步、拦截器代码"><a href="#第二步、拦截器代码" class="headerlink" title="第二步、拦截器代码"></a>第二步、拦截器代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.kindo.Interceptor;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</div><div class="line"><span class="keyword">import</span> org.springframework.web.servlet.handler.HandlerInterceptorAdapter;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 自定义拦截器</div><div class="line"> * </div><div class="line"> * <span class="doctag">@author</span> 张喻龙</div><div class="line"> *</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthorizationInterceptor</span> <span class="keyword">extends</span> <span class="title">HandlerInterceptorAdapter</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span></span></div><div class="line">			<span class="keyword">throws</span> Exception &#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler,</span></span></div><div class="line">			ModelAndView modelAndView) <span class="keyword">throws</span> Exception &#123;</div><div class="line">		System.out.println(<span class="string">"求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）"</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span></span></div><div class="line">			<span class="keyword">throws</span> Exception &#123;</div><div class="line">		System.out.println(<span class="string">"在整个请求结束之后被调用，也就是在DispatcherServlet 渲染了对应的视图之后执行（主要是用于进行资源清理工作）"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚开始使用spring boot还是挺痛苦的，没有了各种XML反而不适应。。。这里给出如何注解添加一个拦截器&lt;/p&gt;
&lt;h3 id=&quot;第一步、继承WebMvcConfigurerAdapter&quot;&gt;&lt;a href=&quot;#第一步、继承WebMvcConfigurerAdapter
    
    </summary>
    
    
      <category term="Spring-Boot" scheme="http://long0428.cc/tags/Spring-Boot/"/>
    
      <category term="拦截器" scheme="http://long0428.cc/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>自定义jsckson null转换为字符串</title>
    <link href="http://long0428.cc/2016/11/29/%E8%87%AA%E5%AE%9A%E4%B9%89jsckson%20null%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>http://long0428.cc/2016/11/29/自定义jsckson null转换为字符串/</id>
    <published>2016-11-29T08:52:26.045Z</published>
    <updated>2016-11-29T09:39:42.023Z</updated>
    
    <content type="html"><![CDATA[<p>在使用spring boot中，默认配置使用jackson时，对象的null值也会被解析成null输出到前台，我们需要把null转换成空字符串</p>
<h3 id="第一步、自定义ObjectMapper"><a href="#第一步、自定义ObjectMapper" class="headerlink" title="第一步、自定义ObjectMapper"></a>第一步、自定义ObjectMapper</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.kindo.config;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonGenerator;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonSerializer;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializerProvider;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KindoObjectMapper</span> <span class="keyword">extends</span> <span class="title">ObjectMapper</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">	* </div><div class="line">	*/</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">KindoObjectMapper</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">super</span>();</div><div class="line">		<span class="comment">// 数字也加引号</span></div><div class="line">		<span class="comment">// this.configure(JsonGenerator.Feature.WRITE_NUMBERS_AS_STRINGS, true);</span></div><div class="line">		<span class="comment">// this.configure(JsonGenerator.Feature.QUOTE_NON_NUMERIC_NUMBERS,</span></div><div class="line">		<span class="comment">// true);</span></div><div class="line">		<span class="comment">// 空值处理为空串</span></div><div class="line">		<span class="keyword">this</span>.getSerializerProvider().setNullValueSerializer(<span class="keyword">new</span> JsonSerializer&lt;Object&gt;() &#123;</div><div class="line">			<span class="meta">@Override</span></div><div class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">serialize</span><span class="params">(Object value, JsonGenerator jg, SerializerProvider sp)</span></span></div><div class="line">					<span class="keyword">throws</span> IOException, JsonProcessingException &#123;</div><div class="line">				jg.writeString(<span class="string">""</span>);</div><div class="line">			&#125;</div><div class="line">		&#125;);</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="第二步、修改SpringBoot启动类"><a href="#第二步、修改SpringBoot启动类" class="headerlink" title="第二步、修改SpringBoot启动类"></a>第二步、修改SpringBoot启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 自定义ObjectMapper</div><div class="line"> * </div><div class="line"> * <span class="doctag">@return</span></div><div class="line"> */</div><div class="line"><span class="meta">@Bean</span></div><div class="line"><span class="function"><span class="keyword">public</span> MappingJackson2HttpMessageConverter <span class="title">mappingJacksonHttpMessageConverter</span><span class="params">()</span> </span>&#123;</div><div class="line">	<span class="keyword">final</span> MappingJackson2HttpMessageConverter converter = <span class="keyword">new</span> MappingJackson2HttpMessageConverter();</div><div class="line">	KindoObjectMapper mapper = <span class="keyword">new</span> KindoObjectMapper();</div><div class="line">	converter.setObjectMapper(mapper);</div><div class="line">	<span class="keyword">return</span> converter;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用spring boot中，默认配置使用jackson时，对象的null值也会被解析成null输出到前台，我们需要把null转换成空字符串&lt;/p&gt;
&lt;h3 id=&quot;第一步、自定义ObjectMapper&quot;&gt;&lt;a href=&quot;#第一步、自定义ObjectMapper&quot; c
    
    </summary>
    
    
      <category term="Spring-Boot" scheme="http://long0428.cc/tags/Spring-Boot/"/>
    
      <category term="jsckson" scheme="http://long0428.cc/tags/jsckson/"/>
    
  </entry>
  
</feed>
